//-- 
//-- $$$$$$$$\          $$\                         
//-- \____$$  |         $$ |                        
//--     $$  / $$$$$$\  $$ | $$$$$$\  $$\  $$\  $$\ 
//--    $$  / $$  __$$\ $$ |$$  __$$\ $$ | $$ | $$ |
//--   $$  /  $$$$$$$$ |$$ |$$ /  $$ |$$ | $$ | $$ |
//--  $$  /   $$   ____|$$ |$$ |  $$ |$$ | $$ | $$ |
//-- $$$$$$$$\\$$$$$$$\ $$ |\$$$$$$  |\$$$$$\$$$$  |
//-- \________|\_______|\__| \______/  \_____\____/ 
//-- 
string.color = function(code)
  return "<color=""" + code + """>" + self + "</color>"
end function //--"Hello World".color("red")
comp = get_shell.host_computer
import_code("/home/Zelow/pwdb.src")
crypto = include_lib("/lib/crypto.so")

process = function(input, output)
	stampoutput = function(left, right)
		addData(left + ":" + right, output)
		print("/".color("white") + output.name.color("yellow") + " logged: ".color("purple") + lines.split(":")[0].color("orange") + ":" + right.color("lightblue"))
	end function
	print("Starting protocol on ".color("purple") + input.path.color("yellow") + " please wait...".color("purple"))
	print((passCount(input) + "").color("lightblue") + " entries found.".color("purple"))
	for data in prepData(input)
		i = 0
		x = 0 //--successful transfers
		for lines in data.get_content.split(char(10))
			if lines.split(":").len != 2 then
				print(input.name.color("white") + "-[".color("lightblue") + (i + "").color("white") + "]".color("lightblue") + " was skipped invalid format".color("red"))
				i = i + 1
				continue
			end if
			if hashBash(lines.split(":")[1]) then 
				print("Pass in bank".color("yellow") + ": " + hashBash(lines.split(":")[1]).color("white") + " hardware saved!".color("purple"))
				stampoutput(lines.split(":")[0], hashBash(lines.split(":")[1]))
			else
				print("Deciphering ".color("purple") + input.path.color("yellow") + "-[".color("lightblue") + (i + "").color("white") + "]".color("lightblue"))
				result = crypto.decipher(lines.split(":")[1])
				print("UsrName".color("orange") + ":" + "Pswd ".color("lightblue") + lines.split(":")[0].color("orange") + ":" + result.color("lightblue"))
				if result then 
					//--if result is not null append to bottom of output
					stampoutput(lines.split(":")[0], result)
					//--log password in password bank
					addData(result + ":" + md5(result), HashBank)
					x = x + 1
				end if
			end if
			i = i + 1
		end for
	end for
	if x > 0 then print("Deciphered ".color("purple") + (x + " ").color("lightblue") + input.name.color("white") + " entries successfully.".color("purple"))
	if x > 0 then print("Logged @".color("purple") + output.path.color("yellow"))
	print("End of ".color("purple") + input.name + " entries".color("purple"))
end function

print (passCount(HashBank) + "").color("white") + " hashed passwords.".color("lightblue")
print (passCount(CBank) + "").color("white") + " cracked bank passwords.".color("yellow")
print (passCount(Bank) + "").color("white") + " total entries in Bank.".color("yellow")
print (passCount(CMail) + "").color("white") + " cracked mail passwords.".color("orange")
print (passCount(Mail) + "").color("white") + " total entries in Mail.".color("orange")
print (passCount(Cpswd) + "").color("white") + " cracked pswd passwords.".color("purple")
print (passCount(pswd) + "").color("white") + " total entries in pswd.".color("purple")

print "What would you like to decipher?".color("white")
print "1. Bank".color("yellow")
print "2. Mail".color("orange")
print "3. pswd".color("purple")
print "WARN: Anything else will exit the program.".color("red")
choice = user_input("Enter ".color("lightblue") + "number ".color("yellow") + "of ".color("orange") + "choice".color("purple") + ": ")

if choice == "1" then 
	//--process bank2get info
	process(Bank, CBank)
else if choice == "2" then
	//--process mail2get info
	process(Mail, CMail)
else if choice == "3" then
	//--process pswd2get info
	process(pswd, Cpswd)
else
	exit("Invalid option, terminating...".color("red"))
end if